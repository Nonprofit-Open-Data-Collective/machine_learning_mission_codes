setwd("~/Dropbox (ASU)")
setwd("~/Dropbox (ASU)/Foreign Born Experience/Outputs/STI/EvH - NRG/gtec")
require(readxl)
require(rlang)
netwise_egos_pubs <- read_excel(
"Foreign Born Experience/Outputs/STI/EvH - NRG/gtec/data/netwise_all_ego_id_indics.xlsx",
col_types = c("text", "text", "numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric","numeric"))
setwd("~/Dropbox (ASU)/Foreign Born Experience/Outputs/STI/EvH - NRG/gtec/data")
setwd("~/Dropbox (ASU)/Foreign Born Experience/Outputs/STI/EvH - NRG/gtec")
netwise_egos_pubs <- read_excel(
"Foreign Born Experience/Outputs/STI/EvH - NRG/gtec/data/netwise_all_ego_id_indics.xlsx",
col_types = c("text", "text", "numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric","numeric"))
setwd("~/Dropbox (ASU)/Foreign Born Experience/Outputs/STI/EvH - NRG/gtec")
setwd("~/Dropbox (ASU)/Foreign Born Experience/Outputs/STI/EvH - NRG/gtec/data")
setwd("~/Dropbox (ASU)")
netwise_egos_pubs <- read_excel(
"Foreign Born Experience/Outputs/STI/EvH - NRG/gtec/data/netwise_all_ego_id_indics.xlsx",
col_types = c("text", "text", "numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric","numeric"))
# Survey
# Net1
library(haven)
net1_v10 <- read_sav(
"Foreign Born Experience/Data for Use/Net 1 clean data/netwise_ego_v10.sav"
)
Net2_v1 <- read_sav(
"Foreign Born Experience/Data for Use/NET 2 clean data/Net2_ego_v1.sav")
# Bibliometric mobility
# Net1
library(readxl)
net1_mob <- read_excel(
"data/net_mobility.xlsx", sheet = "NET1_mobility",
col_types = c("text", "numeric", "text", "text", "numeric", "numeric"))
#Net2
net2_mob <- read_excel(
"data/net_mobility.xlsx", sheet = "NET2_mobility",
col_types = c("text", "numeric", "text", "text", "numeric", "numeric"))
#setwd("C:/Users/Usuario/Dropbox")
#setwd("~/Dropbox (ASU)")
# Data import
# Publications
require(readxl)
require(rlang)
netwise_egos_pubs <- read_excel(
"Foreign Born Experience/Outputs/STI/EvH - NRG/gtec/data/netwise_all_ego_id_indics.xlsx",
col_types = c("text", "text", "numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric","numeric"))
# Survey
# Net1
library(haven)
net1_v10 <- read_sav(
"Foreign Born Experience/Data for Use/Net 1 clean data/netwise_ego_v10.sav"
)
# Net 2
Net2_v1 <- read_sav(
"Foreign Born Experience/Data for Use/NET 2 clean data/Net2_ego_v1.sav")
# Bibliometric mobility
# Net1
library(readxl)
net1_mob <- read_excel(
"Foreign Born Experience/Outputs/STI/EvH - NRG/gtec/data/net_mobility.xlsx", sheet = "NET1_mobility",
col_types = c("text", "numeric", "text", "text", "numeric", "numeric"))
#Net2
net2_mob <- read_excel(
"Foreign Born Experience/Outputs/STI/EvH - NRG/gtec/data/net_mobility.xlsx", sheet = "NET2_mobility",
col_types = c("text", "numeric", "text", "text", "numeric", "numeric"))
# Ethnicity data
# Net1
net1_coaut_eth <- read_excel(
"Foreign Born Experience/Outputs/STI/EvH - NRG/gtec/data/net1_coauthors_eth.xlsx",
col_types = c("text", "numeric", "numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric", "numeric",
"numeric"))
# Net2
net2_coaut_eth <- read_excel(
"Foreign Born Experience/Outputs/STI/EvH - NRG/gtec/data/net2_coauthors_eth.xlsx",
col_types = c("text", "numeric", "numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric", "numeric",
"numeric"))
# Renaming common variable to ego_id
colnames(net1_v10)[1] <- "ego_id"
colnames(Net2_v1)[1] <- "ego_id"
# Merging all datasets
# Net1
net1_all <- merge(net1_v10, net1_mob, by = "ego_id") # Survey + mobility
net1_all <- merge(net1_all, net1_coaut_eth, by = "ego_id") # + ethnicity
# Select pubs only for net1
net1_pubs <- subset(netwise_egos_pubs, survey=="net1")
net1_all <- merge(net1_all, net1_pubs, by = "ego_id") # + pubs
# Net2
net2_all <- merge(Net2_v1, net2_mob, by = "ego_id") # Survey + mobility
net2_all <- merge(net2_all, net2_coaut_eth, by = "ego_id") # + ethnicity
# Select pubs only for net1
net2_pubs <- subset(netwise_egos_pubs, survey=="net2")
net2_all <- merge(net2_all, net2_pubs, by = "ego_id") # + pubs
# Remove redundant dataframes
rm(list = c("netwise_egos_pubs", "net1_coaut_eth", "net1_mob", "net1_pubs",
"net1_v10", "Net2_v1", "net2_coaut_eth", "net2_mob", "net2_pubs"))
names(net2_all)
library(tidyr)
View(net2_all)
head(net2_all$pubs_a_bcv)
head(net2_all$pubs_na_bcv)
head(net2_all$pubs_nar_bcv)
head(net2_all$pubs_nanr_bcv)
tidy(t.test(pubs_a_bcv ~ citizen_foreign, data=pat2))
library(broom)
tidy(t.test(pubs_a_bcv ~ citizen_foreign, data=pat2))
tidy(t.test(pubs_a_bcv ~ citizen_foreign, data=net2_all))
summary(net2_all$citizen_foreign)
summary(net2_all$citizen)
groups <- c("Foreign")
tTable1 <- tidy(t.test(pubs_a_bcv ~ citizen_foreign, data=net2_all))
tTableCommSig<- cbind(groups, tTable1[, c("estimate1", "estimate2", "p.value", "significance")])
tTableCommSig<- cbind(groups, tTable1[, c("estimate1", "estimate2", "p.value")])
colnames(tTableCommSig)[2:3] <- c( "Comparison.Mean", "Group.Mean")
View(tTableCommSig)
setwd("~/Dropbox (ASU)/Papers/Patents")
library(foreign)
pat <- read.spss("pat_final_v4.sav", to.data.frame=T)
table(pat$Citizen)
pat$nborn <- ifelse(pat$Citizen=="Native born U.S. citizen", 1, 0)
pat$fborn <- ifelse(pat$Citizen!="Native born U.S. citizen", 1, 0)
table(pat$nborn, pat$fborn)
table(pat$Patent)
pat2 <- subset(pat,Patent=="Yes")
table(pat2$Royalty)
table(pat2$fborn, pat2$Royalty)
table(pat2$NumSpinoff)
pat2$SpinoffDum <- ifelse(pat2$NumSpinoff>=1, 1, 0)
pat2$SpinoffPct <- (pat2$NumSpinoff/pat2$NumPatent)
pat2$LicenseDum <- ifelse(pat2$NumLicen>=1, 1, 0)
pat2$LicensePct <- (pat2$NumLicen/pat2$NumPatent)
pat2$RoyaltyDum <- ifelse(pat2$Royalty=="Yes", 1, 0)
table(pat2$fborn, pat2$SpinoffDum)
table(pat2$fborn, pat2$LicenseDum)
prop.table(table(pat2$fborn, pat2$LicenseDum))
tab <- (table(pat2$fborn, pat2$LicenseDum))
pat2$female <- ifelse(pat2$Gender=="Female", 1, 0)
pat2$WhiteUSB <- ifelse(pat2$Race_6=="Checked"&pat2$nborn==1, 1, 0)
pat2$WhiteFB <- ifelse(pat2$Race_6=="Checked"&pat2$nborn==0, 1, 0)
pat2$Asian  <- ifelse(pat2$Race_1=="Checked"|pat2$Race_2=="Checked", 1, 0)
pat2$AsianUSB <- ifelse(pat2$Asian==1&pat2$nborn==1, 1, 0)
pat2$AsianFB <- ifelse(pat2$Asian==1&pat2$nborn==0, 1, 0)
pat2$RaceBlack <- ifelse(pat2$Race_3=="Checked", 1, 0)
pat2$RaceOther <- ifelse(pat2$Race_7=="Checked", 1, 0)
pat2$EthHisp <- ifelse(pat2$Hispanic=="Yes", 1, 0)
pat2$PSCommSig <- as.numeric(pat2$PSCommSig)
pat2$TTOservicedum <- ifelse(pat2$TTOQuality_r2=="Somewhat Agree"|pat2$TTOQuality_r2=="Strongly Agree", 1, 0)
pat2$TTOactivedum <- ifelse(pat2$TTOQuality_r2=="Somewhat Agree"|pat2$TTOQuality_r2=="Strongly Agree", 1, 0)
pat2$TTObureaucraticdum <- ifelse(pat2$TTOQuality_r3=="Somewhat Agree"|pat2$TTOQuality_r3=="Strongly Agree", 1, 0)
hist(pat2$NumPatent, breaks=100, col="blue", main="Number of patents for faculty with patents, N=1117")
pat2 <- subset(pat2, NumPatent<100)
summary(lm(SpinoffDum~fborn+WhiteFB))
summary(lm(SpinoffDum~fborn+WhiteFB, data=pdat2))
summary(lm(SpinoffDum~fborn+WhiteFB, data=pat2))
pat2$NonWhiteFB <-  ifelse(pat2$WhiteFB==0&pat2$fborn==1, 1, 0)
summary(lm(SpinoffDum~NonWhiteFB+WhiteFB, data=pat2))
head(pat2)
names(pat2)
summary(lm(SpinoffDum~NonWhiteFB+WhiteFB+factor(Discipline), data=pat2))
summary(lm(SpinoffDum~NonWhiteFB+WhiteFB+factor(REDiscipline), data=pat2))
summary(lm(SpinoffDum~NonWhiteFB+WhiteFB+factor(REDiscipline)+PatentExp+TenTrack, data=pat2))
summary(lm(SpinoffDum~NonWhiteFB+WhiteFB+factor(REDiscipline)+PatentExp+TenTrack+NumPatent, data=pat2))
summary(lm(NumPatent~NonWhiteFB+WhiteFB+factor(REDiscipline)+PatentExp+TenTrack, data=pat2))
source("data_import.R")
setwd("~/Dropbox (ASU)")
names(net2_all)
lm(summary(pubs_a_bcv ~ citizen_foreign*socialcloseness+citizen_foreign*socialpotetency, data=net2_all))
summary(lm(pubs_a_bcv ~ citizen_foreign*socialcloseness+citizen_foreign*socialpotetency, data=net2_all))
summary(lm(pubs_a_bcv ~ citizen_foreign+socialcloseness+citizen_foreign*socialpotetency, data=net2_all))
summary(lm(pubs_a_bcv ~ citizen_foreign+socialcloseness+socialpotetency, data=net2_all))
summary(lm(pubavg ~ citizen_foreign, data=net2_all))
summary(lm(pubavg ~ citizen_foreign*socialpotency+citizen_foreign*socialcloseness, data=net2_all))
summary(lm(pubavg ~ citizen_foreign*socialpotetency+citizen_foreign*socialcloseness, data=net2_all))
summary(lm(socialpotetency ~ citizen_foreign, data=net2_all))
summary(lm(socialcloseness ~ citizen_foreign, data=net2_all))
table(net2_all$yrnatcit)
head(net2_all$yrnatcit)
net2_all$yrnatcit[is.na(net2_all$yrnatcit)] <- 0
table(net2_all$yrnatcit)
summary(lm(pubavg ~ citizen_foreign*yrnatcit, data=net2_all))
table(net2_all$citizen_foreign)
is.numeric(net2_all$citizen_foreign)
summary(lm(pubavg ~ citizen_foreign*yrnatcit*parentsus, data=net2_all))
summary(lm(pubavg ~ citizen_foreign+yrnatcit+foreignphd, data=net2_all))
summary(lm(pubavg ~ citizen_foreign*yrnatcit+citizen_foreign*foreignphd, data=net2_all))
summary(net2_all$yrnatcit)
setwd("~/Dropbox (ASU)")
source("data_import.R")
#setwd("C:/Users/Usuario/Dropbox")
#setwd("~/Dropbox (ASU)")
# Data import
# Publications
require(readxl)
require(rlang)
netwise_egos_pubs <- read_excel(
"Foreign Born Experience/Outputs/STI/EvH - NRG/gtec/data/netwise_all_ego_id_indics.xlsx",
col_types = c("text", "text", "numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric","numeric"))
# Survey
# Net1
library(haven)
net1_v10 <- read_sav(
"Foreign Born Experience/Data for Use/Net 1 clean data/netwise_ego_v10.sav"
)
# Net 2
Net2_v1 <- read_sav(
"Foreign Born Experience/Data for Use/NET 2 clean data/Net2_ego_v1.sav")
# Bibliometric mobility
# Net1
library(readxl)
net1_mob <- read_excel(
"Foreign Born Experience/Outputs/STI/EvH - NRG/gtec/data/net_mobility.xlsx", sheet = "NET1_mobility",
col_types = c("text", "numeric", "text", "text", "numeric", "numeric"))
#Net2
net2_mob <- read_excel(
"Foreign Born Experience/Outputs/STI/EvH - NRG/gtec/data/net_mobility.xlsx", sheet = "NET2_mobility",
col_types = c("text", "numeric", "text", "text", "numeric", "numeric"))
# Ethnicity data
# Net1
net1_coaut_eth <- read_excel(
"Foreign Born Experience/Outputs/STI/EvH - NRG/gtec/data/net1_coauthors_eth.xlsx",
col_types = c("text", "numeric", "numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric", "numeric",
"numeric"))
# Net2
net2_coaut_eth <- read_excel(
"Foreign Born Experience/Outputs/STI/EvH - NRG/gtec/data/net2_coauthors_eth.xlsx",
col_types = c("text", "numeric", "numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric", "numeric",
"numeric"))
# Renaming common variable to ego_id
colnames(net1_v10)[1] <- "ego_id"
colnames(Net2_v1)[1] <- "ego_id"
# Merging all datasets
# Net1
net1_all <- merge(net1_v10, net1_mob, by = "ego_id") # Survey + mobility
net1_all <- merge(net1_all, net1_coaut_eth, by = "ego_id") # + ethnicity
# Select pubs only for net1
net1_pubs <- subset(netwise_egos_pubs, survey=="net1")
net1_all <- merge(net1_all, net1_pubs, by = "ego_id") # + pubs
# Net2
net2_all <- merge(Net2_v1, net2_mob, by = "ego_id") # Survey + mobility
net2_all <- merge(net2_all, net2_coaut_eth, by = "ego_id") # + ethnicity
# Select pubs only for net1
net2_pubs <- subset(netwise_egos_pubs, survey=="net2")
net2_all <- merge(net2_all, net2_pubs, by = "ego_id") # + pubs
# Remove redundant dataframes
rm(list = c("netwise_egos_pubs", "net1_coaut_eth", "net1_mob", "net1_pubs",
"net1_v10", "Net2_v1", "net2_coaut_eth", "net2_mob", "net2_pubs"))
table(net2_all$yrnatcit)
net2_all$yrnatcit <- net2_all$yrnatcit-2012
net2_all$yrnatcit[is.na(net2_all$yrnatcit)] <- 0
summary(lm(pubavg ~ yrnatcit+citizen_foreign*foreignphd, data=net2_all))
net2_all$yrnatcit2 <- net2_all$yrnatcit-2012
summary(lm(pubavg ~ yrnatcit2+citizen_foreign+foreignphd, data=net2_all))
summary(lm(pubavg ~ citizen_foreign+p_int_collab, data=net2_all))
summary(lm(pubavg ~ citizen_foreign*p_int_collab, data=net2_all))
summary(lm(citizen_foreign~p_int_collab, data=net2_all))
summary(lm(pubavg ~ citizen_foreign*p_int_collab+citizen_foreign*socialpotetency+citizen_foreign*socialclosenessyrnatcit2+foreignphd, data=net2_all))
summary(lm(pubavg ~ citizen_foreign*p_int_collab+citizen_foreign*socialpotetency+citizen_foreign*socialcloseness+yrnatcit2+foreignphd, data=net2_all))
summary(lm(pubavg ~ citizen_foreign+p_int_collab+citizen_foreign+socialpotetency+citizen_foreign+socialcloseness+yrnatcit2+foreignphd, data=net2_all))
summary(glm.nb(pubavg ~ citizen_foreign, data=net2_all))
library(glm2)
install.packages("glm.nb")
library(glm2)
library(MASS)
summary(glm.nb(pubavg ~ citizen_foreign, data=net2_all))
options(warn=-1)
summary(glm.nb(pubavg ~ citizen_foreign, data=net2_all))
summary(glm.nb(pubavg ~ yrnatcit2+citizen_foreign+foreignphd, data=net2_all))
setwd("C:/Users/evanholm/Dropbox (ASU)")
setwd("/USC Mission Paper/Data and Analysis/github_files/machine_learning_mission_codes/DATA")
setwd("USC Mission Paper/Data and Analysis/github_files/machine_learning_mission_codes/DATA")
library(bartMachine)
library(BayesTree)
library(dplyr)
library(quanteda.corpora)
library(caret)
library(quanteda)
install.packages("caret")
library(caret)
install.packages("caret")
dat <- read.csv("Mission w Corpus and DFM.csv")
dat2 <- (dat[,118:4947])
dat2 <- (dat[,119:4947])
others <- dat[,c("Incorporatedstate","Donatefundsyes","Onethirdsupportpublic","Onethirdsupportgifts",
"Disasterreliefyes", "Orgpurposereligious")]
dat2 <- cbind(dat2, others)
tree.carseats = tree(Orgpurposereligious~, data=dat2)
tree.carseats = tree(Orgpurposereligious~., data=dat2)
install.packages("tree")
library(tree)
tree.carseats = tree(Orgpurposereligious~., data=dat2)
View(dat2)
others <- dat[,c("Donatefundsyes","Onethirdsupportpublic","Onethirdsupportgifts",
"Disasterreliefyes", "Orgpurposereligious")]
dat2 <- cbind(dat2, others)
tree.carseats = tree(Orgpurposereligious~., data=dat2)
dat2 <- (dat[,119:4947])
others <- dat[,c("Donatefundsyes","Onethirdsupportpublic","Onethirdsupportgifts",
"Disasterreliefyes", "Orgpurposereligious")]
dat2 <- cbind(dat2, others)
tree.carseats = tree(Orgpurposereligious~., data=dat2)
summary(tree.carseats)
plot(tree.carseats)
text(tree.carseats, pretty = 0)
head(dat2$document)
dat2 <- (dat[,119:4947])
others <- dat[,c("Donatefundsyes","Onethirdsupportpublic","Onethirdsupportgifts",
"Disasterreliefyes", "Orgpurposereligious")]
dat2 <- cbind(dat2, others)
dat2 <- subset(dat2, select=-"document")
dat2 <- subset(dat2, select=-dat2$document)
dat2 <- (dat[,119:4947])
others <- dat[,c("Donatefundsyes","Onethirdsupportpublic","Onethirdsupportgifts",
"Disasterreliefyes", "Orgpurposereligious")]
dat2 <- cbind(dat2, others)
dat2 <- subset(dat2, select=-document)
tree.carseats = tree(Orgpurposereligious~., data=dat2)
plot(tree.carseats)
summary(tree.carseats)
train <- sample(1:nrow(dat2), 1500, replace = FALSE)
tree.carseats = tree(Orgpurposereligious~., dat2, subset=train)
plot(tree.carseats)
text(tree.carseats, pretty=0)
tree.carseats <- tree(Orgpurposereligious~., dat2, subset=train)
plot(tree.carseats)
dat2 <- (dat[,119:4947])
others <- dat[,c("Donatefundsyes","Onethirdsupportpublic","Onethirdsupportgifts",
"Disasterreliefyes", "Orgpurposereligious")]
dat2 <- cbind(dat2, others)
dat2 <- subset(dat2, select=-document)
set.seed(1500)
train <- sample(1:nrow(dat2), 1500, replace = FALSE)
tree.carseats <- tree(Orgpurposereligious~., dat2, subset=train)
plot(tree.carseats)
tree.pred <- predict(tree.carseats, dat2[-train,], type="class")
tree.carseats = tree(Orgpurposereligious~., data=dat2)
train <- sample(1:nrow(dat2), 1200)
tree.carseats <- tree(Orgpurposereligious~., dat2, subset=train)
intall.packages("randomForest")
install.packages("randomForest")
rf.boston = randomForest(Orgpurposereligious~., data = dat2, subset = train)
library(randomForest)
rf.boston = randomForest(Orgpurposereligious~., data = dat2, subset = train)
yes
t
y
rf.boston
??randomForest
library(BayesTree)
install.packages("BayesTree")
library(BayesTree)
??BayesTree
??bayes
dat2$list <- 1:nrow(dat2)
train.dat <- dat2[list %in% train]
train.dat <- dat2[(dat2$list %in% train), ]
test.dat <- dat2[(dat2$list !%in% train), ]
test.dat <- dat2![(dat2$list %in% train), ]
test.dat <- dat2[!(dat2$list %in% train), ]
test.dat <- subset(test.dat, select=-Orgpurposereligious)
bart2 <- bartMachine(train.dat, train.dat$Orgpurposereligious, test.dat, verbose=T)
library(BayesTree)
bart2 <- bartMachine(train.dat, train.dat$Orgpurposereligious, test.dat, verbose=T)
bart2 <- bart(train.dat, train.dat$Orgpurposereligious, test.dat, verbose=T)
train.dat <- dat2[(dat2$list %in% train), ]
test.dat <- dat2[!(dat2$list %in% train), ]
bart2 <- bart(train.dat, train.dat$Orgpurposereligious, test.dat, verbose=T)
train.dat <- matrix(as.numeric(unlist(train.dat)),nrow=nrow(train.dat))
bart2 <- bart(train.dat, train.dat$Orgpurposereligious, test.dat, verbose=T)
train.dat2 <- dat2[(dat2$list %in% train), ]
y.train <- train.dat2$Orgpurposereligious
bart2 <- bart(train.dat, y.train, test.dat, verbose=T)
test.dat <- matrix(as.numeric(unlist(test.dat)),nrow=nrow(test.dat))
bart2 <- bart(train.dat, y.train, test.dat, verbose=T)
